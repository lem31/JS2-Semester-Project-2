import{A as c,h as a}from"./headers-DqursC6B.js";import{c as l,a as d}from"./read-BNWd3mxs.js";async function S(){try{const n=await fetch(c,{method:"GET",headers:a()});if(!n.ok)throw new Error(`HTTP error! status: ${n.status||"unknown"}`);const e=(await n.json()).data||[];localStorage.setItem("allListings",JSON.stringify(e));const s=JSON.parse(localStorage.getItem("allListings")||"[]"),r=document.getElementById("all-auction-listings");r&&s.forEach(o=>{l(o,r)})}catch{throw new Error("Error fetching listings")}}async function g(){const i=new URLSearchParams(window.location.search).get("id");if(i)try{const e=await fetch(`https://v2.api.noroff.dev/auction/listings/${i}?_seller=true&_bids=true`,{headers:a()});if(!e.ok){const t=document.createElement("div");throw t.textContent="Failed to fetch listing",t.style.color="red",document.body.appendChild(t),new Error("Failed to fetch listing")}const r=(await e.json()).data,o=document.getElementById("all-auction-listings");if(!o){const t=document.createElement("div");throw t.textContent="Listing container not found",t.style.color="red",document.body.appendChild(t),new Error("Listing container not found")}o.innerHTML="",d(r,o)}catch{throw new Error("Error fetching listing")}else throw new Error("No listing ID found")}export{g as d,S as g};
